# Likelihood-based and Bayesian mixed effect models for ramet growth and red channe intensity

# load packages
library("ggplot2")
library("Rmisc")
library("lubridate")
library("tidyverse")
library("ggpubr")
library("vegan")
library("factoextra")
library("car")
library("lme4")
library("jtools")
library("lmerTest")
library("stargazer")
library("MCMCglmm")
library("pheatmap")
library("MASS")
library("matrixStats")

# Ramet Growth

data=read.csv("2022_growth_nouniques_age_NEW.csv", header=TRUE)
data$len_ct2 <- scale(data$len_ct) #scale growth rate

# Likelihood-based mixed effects models using lme4

# model 1 (rope model)
m1 <- lmer(len_ct2 ~ trans_site + age2 + age2:loc + (1|rope), data = data)
summary(m1)
summ(m1)
confint(m1, method="Wald")

# model 2 (site:clone model)
m2 <- lmer(len_ct2 ~ trans_site + age2 + age2:loc + (1|trans_site:clone), data = data)
summary(m2)
summ(m2)
confint(m2, method="Wald")

# model 3 (site:subclone model)
m3 <- lmer(len_ct2 ~ trans_site + age2 + age2:loc + (1 | trans_site:subclone), data = data)
summary(m3)
summ(m3)
confint(m3, method="Wald")

# model 4 (rope + site:clone model )
m4 <- lmer(len_ct2 ~ trans_site + age2 + age2:loc + (1|trans_site:clone) + (1|rope), data = data)
summary(m4)
summ(m4)
confint(m4, method="Wald")

# model 5 (rope + site:subclone model)
m5 <- lmer(len_ct2 ~ trans_site + age2 + age2:loc + (1|trans_site:subclone) + (1|rope), data = data)
summary(m5)
summ(m5)
confint(m5, method="Wald")

# Randomized sampling 
data1=read.csv("2022_growth_resampled_seed_17651.1643457997.csv", header=TRUE)
data2=read.csv("2022_growth_resampled_seed_27318.5409094582.csv", header=TRUE)
data3=read.csv("2022_growth_resampled_seed_34226.6432012108.csv", header=TRUE)
data4=read.csv("2022_growth_resampled_seed_36921.8511747047.csv", header=TRUE)
data5=read.csv("2022_growth_resampled_seed_48741.7136465854.csv", header=TRUE)

data1$len_ct2 <- scale(data1$len_ct) 
data2$len_ct2 <- scale(data2$len_ct) 
data3$len_ct2 <- scale(data3$len_ct) 
data4$len_ct2 <- scale(data4$len_ct) 
data5$len_ct2 <- scale(data5$len_ct) 

m5.1 <- lmer(len_ct2 ~ trans_site + age2 + age2:loc + (1|trans_site:subclone2) + (1|rope), data = data1)
m5.2 <- lmer(len_ct2 ~ trans_site + age2 + age2:loc + (1|trans_site:subclone2) + (1|rope), data = data2)
m5.3 <- lmer(len_ct2 ~ trans_site + age2 + age2:loc + (1|trans_site:subclone2) + (1|rope), data = data3)
m5.4 <- lmer(len_ct2 ~ trans_site + age2 + age2:loc + (1|trans_site:subclone2) + (1|rope), data = data4)
m5.5 <- lmer(len_ct2 ~ trans_site + age2 + age2:loc + (1|trans_site:subclone2) + (1|rope), data = data5)
summary(m5.1) # not converge
summ(m5.1) #AIC = 513.63
confint(m5.1, method="Wald")
summary(m5.2) 
summ(m5.2) #AIC = 513.63
confint(m5.2, method="Wald")
summary(m5.3) 
summ(m5.3) #AIC = 513.35
confint(m5.3, method="Wald")
summary(m5.4) 
summ(m5.4) #AIC = 513.62
confint(m5.4, method="Wald")
summary(m5.5) 
summ(m5.5)
confint(m5.5, method="Wald")

# Bayesian mixed effects models using MCMCglmm

data$subclone <- as.factor(data$subclone)
data$clone <- as.factor(data$clone)
data$trans_site <- as.factor(data$trans_site)
data$rope <- as.factor(data$rope)
data$age2 <- as.numeric(data$age2)
data$loc <- as.factor(data$loc)
data$len_ct2 <- as.numeric(data$len_ct2)

 # specifying priors
prior1 <- list(R = list(V = 1, nu = 0.002),
               G = list(G1 = list(V = 1, nu = 0.002),
                        G2 = list(V = 1, nu = 0.002),
                        G3 = list(V = 1, nu = 0.002)))
                        
p.var <- var(data$len_ct2, na.rm = TRUE)
p.var #1
prior2 <- list(R = list(V = matrix(p.var/4), nu = 0.2),
                 G = list(G1 = list(V = matrix(p.var/4), nu = 0.2),
                          G2 = list(V = matrix(p.var/4), nu = 0.2), 
                          G3 = list(V = matrix(p.var/4), nu = 0.2)))

model=MCMCglmm(len_ct2 ~ trans_site + age2 + age2:loc, random = ~trans_site:clone + trans_site:subclone + rope, prior=prior1, data=data, nitt=10000000,burnin=100000,thin=1000)
model=MCMCglmm(len_ct2 ~ trans_site + age2 + age2:loc, random = ~trans_site:clone + trans_site:subclone + rope, prior=prior2, data=data, nitt=10000000,burnin=100000,thin=1000)

summary(model)

effectiveSize(model2$Sol) 
effectiveSize(model2$VCV)
autocorr.diag(model2$VCV)


plot(model$Sol) # look at traces of fixed effects
plot(model$VCV) # look at traces of random effects

colMedians(model$Sol) # median of the posterior distributions of fixed effects
HPDinterval(model$Sol, 0.95) # 95% credible intervals

colMedians(model$VCV) # medians of the posterior distributions of the random effects

# Letâ€™s now look at the random effects. To evaluate variance explained by the random effects, it is useful to look at the relative proportion of the variance explained by each effect and by the residuals 
#Proportion of variance explained by random factors
rand <- model2$VCV/apply(model2$VCV,1,sum)
# Get median values (50%) and 95% quantiles 
apply(rand,2,function(c) quantile(c,probs = c(0.025,0.5,0.975)))

# get the mean value, tells you what % of the variance each random effect explains
apply(rand,2,mean)


# Plots for ramet growth

# Clones within and across transplant sites

df_clone <- data                             # Duplicate data
df_clone$clone <- factor(df_clone$clone,     # Reorder factor levels
                         c("Blue", "Pink", "Purple", "Orange", "Green", "Red", "Brown"))

e <- ggplot(df_clone, aes(x = clone, y = len_ct, color=clone)) + geom_point(size=0.7, position= "jitter")
e2 <- e + 
  geom_boxplot(aes(color = clone), position = position_dodge(0.9), outlier.shape = NA) +
  scale_color_manual(values = c("blue4", "maroon3", "darkorchid3","darkorange2", "darkgreen", "red3", "chocolate4")) +
  theme_bw()
e2 + facet_wrap(~trans_site) + theme(panel.spacing = unit(1, "lines"))


# Subclones within and across transplant sites

df_subclone <- data                           # Duplicate data
df_subclone$subclone <- factor(df_subclone$subclone,     # Reorder factor levels
                               c("I_94", "CN_R099_59", "CN_R002", "CN_R045", "CN_R049", "CN_R069", "CN_R048", "CN_R051", "I_B29", "CN_B43", "CN_169", "CN_W071_58", "CN_B1", "CN_203", "CN_W072", "CN_132", "CN_R031", "CN_168", "CN_63","CN_W147", "CN_B77", "CN_W073", "CN_R081", "I_B32", "I_177", "I_B25", "I_B41", "I_B78", "CN_R096", "CN_B6", "CN_60", "I_B63"))

# growth by subclones within transplant sites
e <- ggplot(df_subclone, aes(x = subclone, y = len_ct, color=clone)) #+ geom_point(size=2)
e2 <- e + 
  geom_boxplot(aes(color = clone), position = position_dodge(preserve = "single"), outlier.shape = NA) +
  #scale_color_manual(values = c("blue4", "darkorchid3", "maroon3","darkorange2", "darkgreen", "chocolate4", "red3")) +
  scale_color_manual(values = c("blue4", "chocolate4", "darkgreen","darkorange2","maroon3","darkorchid3", "red3")) +
  #theme_classic()
  theme_bw()
e2 + facet_wrap(~trans_site) + theme(panel.spacing = unit(0.5, "lines"), panel.border = element_rect(color = "black", fill = NA, size = 0.1)) # stat_summary(fun.y="mean", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 1, color = "black")
e2 + facet_wrap(~trans_site) + theme(panel.spacing = unit(0.5, "lines"), panel.border = element_rect(color = "black", fill = NA, size = 0.1)) # stat_summary(fun_data="mean_sdl", geom = "pointrange")

# Ropes across sites
# growth by ropes within transplant sites
e <- ggplot(data, aes(x = rope, y = len_ct, color=trans_site)) + geom_point(size=0.7, position= "jitter")
e2 <- e + 
  geom_boxplot(aes(color = trans_site), position = position_dodge(preserve = "single"), outlier.shape = NA) +
  scale_color_manual(values = c("chartreuse3"," darkgreen", "dodgerblue")) +
  #theme_classic()
  theme_bw()
e2 + facet_grid(~trans_site, scale="free", space="free_x") + theme(panel.spacing = unit(0.5, "lines"), panel.border = element_rect(color = "black", fill = NA, size = 0.3))

# growth by transplant sites
e <- ggplot(data, aes(x = trans_site, y = len_ct, color=trans_site)) + geom_point(size=0.7, position= "jitter")
e2 <- e + 
  geom_boxplot(aes(color = trans_site), width=0.3, position = position_dodge(preserve = "single"), outlier.shape = NA) +
  scale_color_manual(values = c("chartreuse3"," darkgreen", "dodgerblue")) +
  #theme_classic()
  theme_bw()
e2 

# Growth by age
e <- ggplot(data, aes(x = age, y = len_ct, color=age)) + geom_point(size=0.7, position= "jitter")
e2 <- e + 
  geom_boxplot(aes(color = age), width=0.5, position = position_dodge(preserve = "single"), outlier.shape = NA) +
  scale_color_manual(values = c("turquoise4","springgreen4", "royalblue4", "plum4", "pink3")) +
  #theme_classic()
  theme_bw()
e2
e2 + facet_grid(~trans_site, scale="free", space="free_x") + theme(panel.spacing = unit(0.5, "lines"), panel.border = element_rect(color = "black", fill = NA, size = 0.3))


# Growth by age x location
e <- ggplot(data, aes(x = age, y = len_ct, color=age)) + geom_point(size=0.7, position= "jitter")
e2 <- e + 
  geom_boxplot(aes(color = age), width=0.5, position = position_dodge(preserve = "single"), outlier.shape = NA) +
  scale_color_manual(values = c("turquoise4","springgreen4", "royalblue4", "plum4", "pink3")) +
  #coord_cartesian(ylim = c(50, 175)) +
  #theme_classic()
  theme_bw()
e2
e2 + facet_grid(~loc, scale="free", space="free_x") + theme(panel.spacing = unit(0.5, "lines"), panel.border = element_rect(color = "black", fill = NA, size = 0.3))


# Red Channel Intensity (chlorophyll density)

data=read.csv("2022_chl_nouniques_age_NEW.csv", header=TRUE)
data$R_fin2 <- scale(data$R_fin) #scale growth rate

# model 1 (rope model)
m1 <- lmer(R_fin2 ~ trans_site + age2 + age2:loc + (1|rope), data = data)
summary(m1)
summ(m1) 
confint(m1, method="Wald")

# model 2 (site:clone model)
m2 <- lmer(R_fin2 ~ trans_site + age2 + age2:loc + (1|trans_site:clone), data = data)
summary(m2)
summ(m2) #AIC = 508.27
confint(m2, method="Wald")

# model 3 (site:subclone model)
m3 <- lmer(R_fin2 ~ trans_site + age2 + age2:loc + (1 | trans_site:subclone), data = data)
summary(m3)
summ(m3) 
confint(m3, method="Wald")

# model 4 (rope + site:clone model)
m4 <- lmer(R_fin2 ~ trans_site + age2 + age2:loc + (1|trans_site:clone) + (1|rope), data = data)
summary(m4)
summ(m4) 
confint(m4b, method="Wald")

# model 5 (rope + site:subclone model)
m5 <- lmer(R_fin2 ~ trans_site + age2 + age2:loc + (1|trans_site:subclone) + (1|rope), data = data)
summary(m5)
summ(m5)
confint(m5, method="Wald")

# model 6 (rope + site:clone + site:subclone model)
m6 <- lmer(R_fin2 ~ trans_site + age2 + age2:loc + (1|trans_site:clone) + (1|trans_site:subclone) + (1|rope), data = data)
summary(m6)
summ(m6) 
confint(m6, method="Wald")

# Bayesian mixed effects models using MCMCglmm
data$subclone <- as.factor(data$subclone)
data$clone <- as.factor(data$clone)
data$trans_site <- as.factor(data$trans_site)
data$rope <- as.factor(data$rope)
data$age2 <- as.numeric(data$age2)
data$loc <- as.factor(data$loc)
data$R_fin2 <- as.numeric(data$R_fin2)

prior1 <- list(R = list(V = 1, nu = 0.002),
                 G = list(G1 = list(V = 1, nu = 0.002),
                          G2 = list(V = 1, nu = 0.002),
                          G3 = list(V = 1, nu = 0.002)))


p.var <- var(data$R_fin2, na.rm = TRUE) # will be the same for all subsampling datasets
p.var #1
prior2 <- list(R = list(V = matrix(p.var/4), nu = 0.2),
                 G = list(G1 = list(V = matrix(p.var/4), nu = 0.2),
                          G2 = list(V = matrix(p.var/4), nu = 0.2),
                          G3 = list(V = matrix(p.var/4), nu = 0.2)))

# model
model=MCMCglmm(R_fin2 ~ trans_site + age2 + age2:loc, random = ~trans_site:clone + trans_site:subclone + rope, prior=prior4.1, data=data, nitt=10000000,burnin=100000,thin=1000)
model=MCMCglmm(R_fin2 ~ trans_site + age2 + age2:loc, random = ~trans_site:clone + trans_site:subclone + rope, prior=prior4.3, data=data, nitt=10000000,burnin=100000,thin=1000)

summary(model)

autocorr.diag(model$VCV)

plot(model$Sol) # look at plot of fixed effects
plot(model$VCV) # look at plot of random effects

colMedians(model$Sol) # just use the values for the first 5 columns - (Intercept), trans_siteM2, trans_siteR, age2, age2:lochom
colMedians(model$VCV) # medians of the posterior distributions
HPDinterval(model$Sol, 0.95)

# Letâ€™s now look at the random effects. To evaluate variance explained by the random effects, it is useful to look at the relative proportion of the variance explained by each effect and by the residuals 
#Proportion of variance explained by random factors
rand <- model$VCV/apply(model$VCV,1,sum)
# Get median values (50%) and 95% quantiles 
apply(rand,2,function(c) quantile(c,probs = c(0.025,0.5,0.975)))

# get the mean value, tells you what % of the variance each random effect explains
apply(rand,2,mean)


# Plots for red channel intensity

# Clones within and across transplant sites

df_clone <- data                             # Duplicate data
df_clone$clone <- factor(df_clone$clone,     # Reorder factor levels
                         c("Blue", "Pink", "Purple", "Orange", "Green", "Red", "Brown"))

e <- ggplot(df_clone, aes(x = clone, y = R_fin, color=clone)) + geom_point(size=0.7, position= "jitter")
e2 <- e + 
  geom_boxplot(aes(color = clone), position = position_dodge(0.9), outlier.shape = NA) +
  scale_color_manual(values = c("blue4", "maroon3", "darkorchid3","darkorange2", "darkgreen", "red3", "chocolate4")) +
  coord_cartesian(ylim = c(50, 175)) +
  theme_bw()
e2 + facet_wrap(~trans_site) + theme(panel.spacing = unit(1, "lines"))


# Subclones within and across transplant sites

df_subclone <- data                           # Duplicate data
df_subclone$subclone <- factor(df_subclone$subclone,     # Reorder factor levels
                               c("I_94", "CN_R099_59", "CN_R002", "CN_R045", "CN_R049", "CN_R069", "CN_R048", "CN_R051", "I_B29", "CN_B43", "CN_169", "CN_W071_58", "CN_B1", "CN_203", "CN_W072", "CN_132", "CN_R031", "CN_168", "CN_63","CN_W147", "CN_B77", "CN_W073", "CN_R081", "I_B32", "I_177", "I_B25", "I_B41", "I_B78", "CN_R096", "CN_B6", "CN_60", "I_B63"))

# growth by subclones within transplant sites
e <- ggplot(df_subclone, aes(x = subclone, y = R_fin, color=clone)) + geom_point(size=0.7, position= "jitter")
e2 <- e + 
  geom_boxplot(aes(color = clone), position = position_dodge(preserve = "single"), outlier.shape = NA) +
  #scale_color_manual(values = c("blue4", "darkorchid3", "maroon3","darkorange2", "darkgreen", "chocolate4", "red3")) +
  scale_color_manual(values = c("blue4", "chocolate4", "darkgreen","darkorange2","maroon3","darkorchid3", "red3")) +
  coord_cartesian(ylim = c(50, 175)) +
  #theme_classic()
  theme_bw()
e2 + facet_wrap(~trans_site) + theme(panel.spacing = unit(0.5, "lines"), panel.border = element_rect(color = "black", fill = NA, size = 0.3))
e2 + facet_wrap(~trans_site) + theme(panel.spacing = unit(1, "lines"), panel.border = element_blank())

# growth by ropes within transplant sites
e <- ggplot(data, aes(x = rope, y = R_fin, color=trans_site)) + geom_point(size=0.7, position= "jitter")
e2 <- e + 
  geom_boxplot(aes(color = trans_site), position = position_dodge(preserve = "single"), outlier.shape = NA) +
  scale_color_manual(values = c("chartreuse3"," darkgreen", "dodgerblue")) +
  coord_cartesian(ylim = c(50, 175)) +
  #theme_classic()
  theme_bw()
e2 + facet_grid(~trans_site, scale="free", space="free_x") + theme(panel.spacing = unit(0.5, "lines"), panel.border = element_rect(color = "black", fill = NA, size = 0.3))

# growth by transplant sites
e <- ggplot(data, aes(x = trans_site, y = R_fin, color=trans_site)) + geom_point(size=0.7, position= "jitter")
e2 <- e + 
  geom_boxplot(aes(color = trans_site), width=0.3, position = position_dodge(preserve = "single"), outlier.shape = NA) +
  scale_color_manual(values = c("chartreuse3"," darkgreen", "dodgerblue")) +
  coord_cartesian(ylim = c(50, 175)) +
  #theme_classic()
  theme_bw()
e2 

# Growth by age
e <- ggplot(data, aes(x = age, y = R_fin, color=age)) + geom_point(size=0.7, position= "jitter")
e2 <- e + 
  geom_boxplot(aes(color = age), width=0.5, position = position_dodge(preserve = "single"), outlier.shape = NA) +
  scale_color_manual(values = c("turquoise4","springgreen4", "royalblue4", "plum4", "pink3")) +
  coord_cartesian(ylim = c(50, 175)) +
  #theme_classic()
  theme_bw()
e2

# Growth by age x location
e <- ggplot(data, aes(x = age, y = R_fin, color=age)) + geom_point(size=0.7, position= "jitter")
e2 <- e + 
  geom_boxplot(aes(color = age), width=0.5, position = position_dodge(preserve = "single"), outlier.shape = NA) +
  scale_color_manual(values = c("turquoise4","springgreen4", "royalblue4", "plum4", "pink3")) +
  coord_cartesian(ylim = c(50, 175)) +
  #theme_classic()
  theme_bw()
e2
e2 + facet_grid(~loc, scale="free", space="free_x") + theme(panel.spacing = unit(0.5, "lines"), panel.border = element_rect(color = "black", fill = NA, size = 0.3))





